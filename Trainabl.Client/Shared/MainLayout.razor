@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Trainabl.Client.Pages
@using Trainabl.Shared.Models
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject SignOutSessionStateManager SignOutManager
@inject IConfiguration Configuration
@inject IDialogService DialogService
<MudThemeProvider IsDarkMode="@_isDarkMode"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="0">
        <div class="d-flex align-center" style="width: 100%;">
            <MudIconButton Icon="@Icons.Filled.Menu" Edge="Edge.Start" OnClick="ToggleDrawer"/>
            <MudText Typo="Typo.h5">KinesicSpace</MudText>
            <MudSpacer/>
            <AuthorizeView>
                <Authorized>
                    <MudMenu AnchorOrigin="Origin.BottomRight">
                        <ActivatorContent>
                            <MudAvatar Color="Color.Tertiary">@context.User.Identity?.Name[0]</MudAvatar>
                        </ActivatorContent>
                        <ChildContent>
                            <MudMenuItem Link="Identity/Account/Manage">Manage Account</MudMenuItem>
                            @*
                            <MudMenuItem>
                                <form class="d-flex" method="post" action="authentication/logout">
                                    <button type="submit" class="nav-item nav-link btn-link btn my-0 py-0">Log out</button>
                                </form>
                            </MudMenuItem>
                        *@
                            <MudMenuItem OnClick="BeginSignOut">Log out</MudMenuItem>
                        </ChildContent>
                    </MudMenu>
                </Authorized>
                <NotAuthorized>
                    <MudButton Variant="Variant.Text" Link="Register">Register</MudButton>
                    <MudButton Variant="Variant.Text" Link="authentication/login">Log in</MudButton>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="0" Variant="DrawerVariant.Mini" ClipMode="DrawerClipMode.Always" >
        <MudNavMenu Bordered="true">
            <MudNavLink Href="TrainerDashboard" Icon="@Icons.Filled.Dashboard">Dashboard</MudNavLink>
            <MudNavLink Href="WorkoutLibrary" Icon="@Icons.Filled.LocalLibrary">Workout Library</MudNavLink>
        </MudNavMenu>
        <MudSpacer/>
        <MudNavMenu>
            <MudNavLink Icon="@Icons.Filled.Settings" OnClick="ShowSettingsDialog">Settings</MudNavLink>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="mt-8 px-8">@Body</MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    [CascadingParameter]
    public UserSettings UserSettings { get; set; }

    protected override Task OnInitializedAsync()
    {
        _drawerOpen = !UserSettings.PreferMiniDrawer;
        _isDarkMode = !UserSettings.PreferLightMode;
        return base.OnInitializedAsync();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        _drawerOpen = !UserSettings.PreferMiniDrawer;
        _isDarkMode = !UserSettings.PreferLightMode;
        base.OnAfterRender(firstRender);
    }

    bool _drawerOpen;
    bool _isDarkMode;

    private void ToggleDrawer()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void ToggleDarkMode()
    {
        _isDarkMode = !_isDarkMode;
    }
    
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        NavigationManager.NavigateTo("authentication/logout");
    }

    private void ShowSettingsDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<Settings>("Settings", options);
    }
}
